{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\N VAISHNAVI\\\\Desktop\\\\MyProject\\\\MyProject\\\\src\\\\components\\\\ViewCourses.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CourseCard from './CourseCard';\nimport CircularProgressBar from './CircularProgressBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewCourses = _ref => {\n  let {\n    courses\n  } = _ref;\n  // Calculate progress counts by status\n  const newCount = courses.filter(course => course.status === 'New').length;\n  const inProgressCount = courses.filter(course => course.status === 'In-Progress').length;\n  const completedCount = courses.filter(course => course.status === 'Completed').length;\n  const overdueCount = courses.filter(course => course.status === 'Overdue').length;\n\n  // Calculate progress percentages by status\n  const totalCount = courses.length;\n  const newPercentage = newCount / totalCount * 100;\n  const inProgressPercentage = inProgressCount / totalCount * 100;\n  const completedPercentage = completedCount / totalCount * 100;\n  const overduePercentage = overdueCount / totalCount * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circular-progress-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circular-progress-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"New/(Not Started)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CircularProgressBar, {\n          percentage: newPercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [newCount, \" courses\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circular-progress-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"In-Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CircularProgressBar, {\n          percentage: inProgressPercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [inProgressCount, \" courses\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circular-progress-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CircularProgressBar, {\n          percentage: completedPercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [completedCount, \" courses\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circular-progress-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Overdue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CircularProgressBar, {\n          percentage: overduePercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [overdueCount, \" courses\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-card-container\",\n      children: courses.slice(0, 10).map(course => /*#__PURE__*/_jsxDEV(CourseCard, {\n        name: course.name,\n        progress: course.progress,\n        lastDate: course.lastDate\n      }, course.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = ViewCourses;\nViewCourses.propTypes = {\n  courses: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    progress: PropTypes.number.isRequired,\n    lastDate: PropTypes.string.isRequired,\n    status: PropTypes.oneOf(['New', 'In-Progress', 'Completed', 'Overdue']).isRequired\n  })).isRequired\n};\nexport default ViewCourses;\nvar _c;\n$RefreshReg$(_c, \"ViewCourses\");","map":{"version":3,"names":["React","PropTypes","CourseCard","CircularProgressBar","ViewCourses","courses","newCount","filter","course","status","length","inProgressCount","completedCount","overdueCount","totalCount","newPercentage","inProgressPercentage","completedPercentage","overduePercentage","slice","map","name","progress","lastDate","id","propTypes","arrayOf","shape","number","isRequired","string","oneOf"],"sources":["C:/Users/N VAISHNAVI/Desktop/MyProject/MyProject/src/components/ViewCourses.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CourseCard from './CourseCard';\r\nimport CircularProgressBar from './CircularProgressBar';\r\n\r\nconst ViewCourses = ({ courses }) => {\r\n  // Calculate progress counts by status\r\n  const newCount = courses.filter(course => course.status === 'New').length;\r\n  const inProgressCount = courses.filter(course => course.status === 'In-Progress').length;\r\n  const completedCount = courses.filter(course => course.status === 'Completed').length;\r\n  const overdueCount = courses.filter(course => course.status === 'Overdue').length;\r\n\r\n  // Calculate progress percentages by status\r\n  const totalCount = courses.length;\r\n  const newPercentage = (newCount / totalCount) * 100;\r\n  const inProgressPercentage = (inProgressCount / totalCount) * 100;\r\n  const completedPercentage = (completedCount / totalCount) * 100;\r\n  const overduePercentage = (overdueCount / totalCount) * 100;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"circular-progress-container\">\r\n        <div className=\"circular-progress-item\">\r\n          <h3>New/(Not Started)</h3>\r\n          <CircularProgressBar percentage={newPercentage} />\r\n          <p>{newCount} courses</p>\r\n        </div>\r\n        <div className=\"circular-progress-item\">\r\n          <h3>In-Progress</h3>\r\n          <CircularProgressBar percentage={inProgressPercentage} />\r\n          <p>{inProgressCount} courses</p>\r\n        </div>\r\n        <div className=\"circular-progress-item\">\r\n          <h3>Completed</h3>\r\n          <CircularProgressBar percentage={completedPercentage} />\r\n          <p>{completedCount} courses</p>\r\n        </div>\r\n        <div className=\"circular-progress-item\">\r\n          <h3>Overdue</h3>\r\n          <CircularProgressBar percentage={overduePercentage} />\r\n          <p>{overdueCount} courses</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"course-card-container\">\r\n        {courses.slice(0, 10).map(course => (\r\n          <CourseCard\r\n            key={course.id}\r\n            name={course.name}\r\n            progress={course.progress}\r\n            lastDate={course.lastDate}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nViewCourses.propTypes = {\r\n  courses: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      progress: PropTypes.number.isRequired,\r\n      lastDate: PropTypes.string.isRequired,\r\n      status: PropTypes.oneOf(['New', 'In-Progress', 'Completed', 'Overdue']).isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default ViewCourses;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}